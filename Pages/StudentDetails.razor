@page "/studentdetails/{IdStudent:int}"
@inject NavigationManager navigation

<h1>Student's Details</h1>

@if (Student == null)
{
    <h4> Student not found. Invalid id provided. </h4>
}
else
{
    <div class="mainblock">
        <table>
            <tr>
                <th>First name:</th>
                <td><div class="data">@Student.FirstName</div></td>
                <th>Avatar:</th>
                <td><div class="data"><a href="@Student.Avatar">@Student.Avatar</a></div></td>
            </tr>
            <tr>
                <th>Last name:</th>
                <td><div class="data">@Student.LastName</div></td>
                <td rowspan="3" colspan="2"><img src="@Student.Avatar" alt="Avatar @Student.IdStudent" /></td>
            </tr>
            <tr>
                <th>Birthdate:</th>
                <td><div class="data">@Student.Birthdate.ToShortDateString()</div></td>
            </tr>
            <tr>
                <th>Studies:</th>
                <td><div class="data">@Student.Studies</div></td>
            </tr>
            <tr>
                <td><button @onclick="ReturnButton">Return</button></td>
            </tr>
        </table>
    </div>
}

@code {
    [Parameter]
    public int IdStudent { get; set; }

    public Student Student { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        Student = StudentConstructor.Students
            .SingleOrDefault(s => s.IdStudent == IdStudent);

    }

    private void ReturnButton()
    {
        navigation.NavigateTo("/");
    }

}